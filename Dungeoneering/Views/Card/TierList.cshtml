@using Merwer.Chronicle.Dungeoneering.Tracker.Models;

@section scripts {
    @Scripts.Render("/Content/js/tierlist.js")
}

@section styles {
    @Styles.Render("/Content/css/tierlist.css")
}

@functions {
    MvcHtmlString GetTierName(int i) {
        switch (i)
        {
            case 1: return new MvcHtmlString("Insta-pick");
            case 2: return new MvcHtmlString("Good");
            case 3: return new MvcHtmlString("Above Average");
            case 4: return new MvcHtmlString("Average");
            case 5: return new MvcHtmlString("Below Average");
            case 6: return new MvcHtmlString("Bad");
            case 7: return new MvcHtmlString("Brick");
            case 8: return new MvcHtmlString("Uncategorized");
            default: return new MvcHtmlString("Unknown");
        }
    }
}

@{
        ViewBag.Title = "TierList";
}

<h2>TierList</h2>

<ul class="nav nav-tabs" data-tabs="tabs">
    @foreach (var archetype in Enum.GetValues(typeof(Archetype)))
    {
        <li role="presentation">
            <a role="tab" href="#@archetype.ToString().ToLower()" data-toggle="tab" class="archetype-tab" data-archetype="@archetype">
                @Html.Partial("_LegendIcon", archetype)
            </a>
        </li>
    }
</ul>

<div class="tab-content">
    @foreach (var archetype in Enum.GetValues(typeof(Archetype)).Cast<Archetype>())
    {
        var archetypeStr = archetype.ToString().ToLower();
        <div id="@archetypeStr" role="tabpanel" class="tab-pane">
            <ul class="nav nav-pills" data-pills="pills">
                @foreach (var rarity in Enum.GetValues(typeof(Rarity)).Cast<Rarity>())
                {
                    var rarityStr = rarity.ToString().ToLower();
                    <li role="presentation" @if(rarity == Rarity.Saphire) { <text>class="active"</text> }>
                        <a role="tab" href="#@rarityStr-@archetypeStr" data-toggle="pill">@rarity.ToString()</a>
                    </li>
                }
            </ul>

            <div class="tab-content">
                @foreach (var rarity in Enum.GetValues(typeof(Rarity)).Cast<Rarity>())
                {
                    var rarityStr = rarity.ToString().ToLower();
                    <div id="@rarityStr-@archetypeStr" role="tabpanel" class="tab-pane @archetypeStr @rarityStr @if(rarity == Rarity.Saphire) { <text>active</text> } @rarityStr-content">
                        <ol class="tiers">
                            @for (var i = 1; i <= 8; i++)
                            {
                                <li class="tier tier-@i">
                                    <header class="header">@GetTierName(i)</header>
                                    <ol class="tiered-cards tier-@i"></ol>
                                </li>
                            }
                        </ol>
                    </div>
                }
            </div>
        </div>
    }
</div>
